pipeline {
    agent any

     stages {
       
        stage('Get Code') {
            steps {
                // Trae todo el cÃ³digo fuente del repositorio
                git 'https://github.com/shuasipomac/helloworld.git'
            }
        }

        stage('Unit') {
            steps {
                catchError(buildResult: 'UNSTABLE', stageResult: 'FAILURE') {
                    bat '''
                        set PYTHONPATH=%WORKSPACE%
			set path=C:\\Python\\Python312;C:\\Python\\Python312\\Scripts;
                        coverage run --branch --source=app --omit=app\\__init__.py,app\\api.py -m pytest --junitxml=result-unit.xml test\\unit
                     '''
                        junit 'result-unit.xml' 
                }
            }
        }  

 	stage('Rest') {
            steps {
                catchError(buildResult: 'UNSTABLE', stageResult: 'FAILURE') {
                 bat '''                         
                    set FLASK_APP=app\\api.py
		    set path=C:\\Python\\Python312;C:\\Python\\Python312\\Scripts;C:\\Program Files\\Java\\jdk-11;C:\\Program Files\\Java\\jdk-11\\bin;
                    start /B cmd /c flask run
		    start Java -jar C:\\CLON\\wiremock\\wiremock-standalone-3.5.3.jar --port 9090 --root-dir test\\wiremock
                    set PYTHONPATH=%WORKSPACE%  
		    pytest --junitxml=result-rest.xml test\\rest
                 '''
                    junit 'result-rest.xml' 
                }  
            }
        }

        stage('Cobertura') {
            steps {
                bat ''' 
                    set PYTHONPATH=%WORKSPACE%
                    set path=C:\\Python\\Python312;C:\\Python\\Python312\\Scripts;C:\\Program Files\\Java\\jdk-11;C:\\Program Files\\Java\\jdk-11\\bin;
	            coverage xml	
                '''
                    catchError(buildResult: 'UNSTABLE', stageResult: 'FAILURE') {
                    cobertura coberturaReportFile: 'coverage.xml', conditionalCoverageTargets: '100, 80, 90', failUnstable: false, lineCoverageTargets: '100, 85, 95', onlyStable: false
                    }
            }
        }
        
        stage ('Static') {
            steps {
               bat ''' 
                   set PYTHONPATH=%WORKSPACE%
		   set path=C:\\Python\\Python312;C:\\Python\\Python312\\Scripts;
                   flake8 --exit-zero --format=pylint app >flake8.out
                '''
               recordIssues tools: [flake8(name: 'Flake8', pattern: 'flake8.out')], qualityGates : [[threshold: 8, type: 'TOTAL', unstable: true], [threshold: 10, type: 'TOTAL', unstable: false]]
            }
        }       
       
        stage ('Security') {
            steps {
               bat ''' 
                   set PYTHONPATH=%WORKSPACE%
		   set path=C:\\Python\\Python312;C:\\Python\\Python312\\Scripts;
                   bandit --exit-zero -r . -f custom -o bandit.out --severity-level medium --msg-template "{abspath}:{line}: [{test_id}] {msg}"
               '''
               recordIssues tools: [pyLint(name: 'Bandit', pattern: 'bandit.out')], qualityGates : [[threshold: 2, type: 'TOTAL', unstable: true], [threshold: 4, type: 'TOTAL', unstable: false]]
            }
        }       
       
       

        stage ('Performance') {
            steps {
                bat ''' 
                  set FLASK_APP=app\\api.py
		  set path=C:\\Python\\Python312;C:\\Python\\Python312\\Scripts;C:\\Program Files\\Java\\jdk-11;C:\\Program Files\\Java\\jdk-11\\bin;
                  start /B cmd /c flask run
                '''
                  bat 'C:\\apache-jmeter-5.6.3\\apache-jmeter-5.6.3\\bin\\jmeter -n -t test\\jmeter\\flask.jmx -f -l flask.jtl'
                  perfReport sourceDataFiles: 'flask.jtl'
            }
        }    
   
   
     }
}
